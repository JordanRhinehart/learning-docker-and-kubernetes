---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: training
data:
  database_url: mongo
---
apiVersion: v1
kind: Secret
metadata: 
 name: mongo-secrets
 namespace: training
type: Opaque
data:
 mongo-username: bW9uZ28K
 mongo-password: bW9uZ28K
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: training
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy: {}
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        volumeMounts:
        - mountPath: /mongo-dir
          name: my-mongo-volume
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
           secretKeyRef:
             name: mongo-secrets
             key: mongo-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
           secretKeyRef:
             name: mongo-secrets
             key: mongo-password
      volumes:
      - name: my-mongo-volume
        hostPath:
          path: /data
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mongo
  name: mongo
  namespace: training
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo-express
  name: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  strategy: {}
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - image: mongo-express
        name: mongo-express
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_BASICAUTH_USERNAME
          valueFrom:
           secretKeyRef:
             name: mongo-secrets
             key: mongo-username
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          valueFrom:
           secretKeyRef:
             name: mongo-secrets
             key: mongo-password
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
            configMapKeyRef:
              name: mongodb-configmap
              key: database_url

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mongo-express
  name: mongo-express
  namespace: training
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: mongo-express
  type: NodePort
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx-statefulset
spec:
  serviceName: "nginx-statefulset"
  replicas: 3
  selector:
    matchLabels:
      app: nginx-statefulset
  template:
    metadata:
      labels:
        app: nginx-statefulset
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 200m
            memory: 0.5Gi
          limits:
            cpu: 400m
            memory: 1Gi

---

apiVersion: v1
kind: ResourceQuota
metadata:
  name: compute-quota
  namespace: training
spec:
  hard:
    requests.cpu: "1"
    requests.memory: 1Gi
    limits.cpu: "2"
    limits.memory: 2Gi
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: object-quota
  namespace: training
spec:
  hard:
    configmaps: "2"
    secrets: "2"
    services: "10"
    #"service.loadbalancer": "2"


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 30
          periodSeconds: 60
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 30
          periodSeconds: 60
          failureThreshold: 10
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
